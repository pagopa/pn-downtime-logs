logging.config=classpath:logback-base.xml
#cors


amazon.safestore.baseurl=${PN_DOWNTIMELOGS_SAFESTORAGEBASEURL}
amazon.sqs.region.static=${AWS_REGIONCODE}

pagopa.header.enable-apikey=${PN_DOWNTIMELOGS_ENABLE_APIKEY}
pagopa.header.apikey = ${PN_DOWNTIMELOGS_APIKEY_HEADER}
pagopa.headervalue.apikey =  ${PN_DOWNTIMELOGS_APIKEY_VALUE}
pagopa.reservation.documenttype = ${PN_DOWNTIMELOGS_DOCUMENT_TYPE}

#parametri scheduler
scheduler.legalfactid.cron-expression = ${PN_DOWNTIMELOGS_SCHEDULER_LEGALFACTID_TIMER}
scheduler.legalfactid.active = ${PN_DOWNTIMELOGS_SCHEDULER_LEGALFACTID_ACTIVE}
amazon.safestore.reservefile=${PN_DOWNTIMELOGS_SAFESTORAGE_RESERVEFILE}
amazon.dynamodb.event.endpoint=${PN_DOWNTIMELOGS_DYNAMODB_EVENT_ENDPOINT}
amazon.dynamodb.log.endpoint=${PN_DOWNTIMELOGS_DYNAMODB_LOG_ENDPOINT}
amazon.dynamodb.accesskey=
amazon.dynamodb.secretkey=
history.index = invertedIndex
amazon.sqs.end-point.acts-queue=${PN_DOWNTIMELOGS_SQS_ACTS_ENDPOINT}
amazon.sqs.end-point.cloudwatch=${PN_DOWNTIMELOGS_CLOUDWATCH_ENDPOINT}
amazon.sqs.end-point.legalfact-available=${PN_DOWNTIMELOGS_LEGALFACTAVAILABLE_ENDPOINT}

spring.main.allow-bean-definition-overriding=true

