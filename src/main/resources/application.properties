#cors
spring_cors_origin=*
server.port=${SERVER_PORT}

#jpa:
# spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.show-sql=false
# spring.jpa.open-in-view=false
spring.devtools.add-properties=true
spring.profiles.active=@spring.profiles.active@

amazon.dynamodb.endpoint=${DYNAMODB_ENDPOINT}
amazon.dynamodb.accesskey=${DYNAMODB_ACCESSKEY}
amazon.dynamodb.secretkey=${DYNAMODB_SECRETKEY}
amazon.safestore.baseurl=${SAFESTORE_BASEURL}
amazon.safestore.reservefile=${SAFESTORE_OPERATIONSURL}


amazon.sqs.region.static=${SQS_REGION}
amazon.sqs.credentials.accessKey=${SQS_ACCESSKEY}
amazon.sqs.credentials.secretKey=${SQS_SECRETKEY}

amazon.sqs.end-point.acts-queue=${SQS_ENDPOINT}
amazon.sqs.end-point.cloudwatch=${CLOUDWATCH_ENDPOINT}
amazon.sqs.end-point.legalfact-available=${LEGALFACTAVAILABLE_ENDPOINT}

pagopa.header.enable-apikey=${PAGOPA_ENABLE_APIKEY}
pagopa.header.apikey = ${PAGOPA_APIKEY_HEADER}
pagopa.headervalue.apikey =  ${PAGOPA_APIKEY_VALUE}
pagopa.reservation.documenttype =  ${PAGOPA_DOCUMENT_TYPE}

#parametri scheduler
scheduler.legalfactid.cron-expression = ${QUARTZ_SCHEDULER_TIMER_LEGALFACTID}
scheduler.legalfactid.active = ${SCHEDULER_LEGALFACTID_ACTIVE}
