package it.pagopa.pn.downtime.model;

import java.io.Serializable;
import java.time.OffsetDateTime;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;

import it.pagopa.pn.downtime.model.converter.OffsetDateTimeConverter;
import it.pagopa.pn.downtime.model.converter.PnFunctionalityConverter;
import it.pagopa.pn.downtime.model.converter.PnFunctionalityStatusConverter;
import it.pagopa.pn.downtime.model.converter.PnSourceTypeConverter;
import it.pagopa.pn.downtime.pn_downtime.model.PnFunctionality;
import it.pagopa.pn.downtime.pn_downtime.model.PnFunctionalityStatus;
import it.pagopa.pn.downtime.pn_downtime.model.PnStatusUpdateEvent.SourceTypeEnum;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.Setter;


@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@DynamoDBTable(tableName = "Event")
public class Event implements Serializable {
		private static final long serialVersionUID = 1L;
		private String uuid;
	    private OffsetDateTime timestamp;
	    private String yearMonth;
	    private PnFunctionality functionality;
	    private PnFunctionalityStatus status;
	    private SourceTypeEnum sourceType;
	    private String source;

	    @DynamoDBHashKey
	    @DynamoDBAutoGeneratedKey
	    public String getUuid() {
	        return uuid;
	    }

	    @DynamoDBAttribute
	    @DynamoDBTypeConverted(converter=OffsetDateTimeConverter.Converter.class)
		public OffsetDateTime getTimestamp() {
			return timestamp;
		}
	    
	    @DynamoDBAttribute
		public String getYearMonth() {
			return yearMonth;
		}
	    
	    @DynamoDBAttribute
	    @DynamoDBTypeConverted(converter=PnFunctionalityConverter.Converter.class)
		public PnFunctionality getFunctionality() {
			return functionality;
		}
	    
	    @DynamoDBAttribute
	    @DynamoDBTypeConverted(converter=PnFunctionalityStatusConverter.Converter.class)
		public PnFunctionalityStatus getStatus() {
			return status;
		}
	    
	    @DynamoDBAttribute
	    @DynamoDBTypeConverted(converter=PnSourceTypeConverter.Converter.class)
		public SourceTypeEnum getSourceType() {
			return sourceType;
		}
	    
	    @DynamoDBAttribute
		public String getSource() {
			return source;
		}


}
