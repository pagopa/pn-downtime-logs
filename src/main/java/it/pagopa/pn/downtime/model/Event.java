package it.pagopa.pn.downtime.model;

import java.io.Serializable;
import java.time.OffsetDateTime;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;

import it.pagopa.pn.downtime.generated.openapi.server.v1.dto.PnFunctionality;
import it.pagopa.pn.downtime.generated.openapi.server.v1.dto.PnFunctionalityStatus;
import it.pagopa.pn.downtime.generated.openapi.server.v1.dto.PnStatusUpdateEvent.SourceTypeEnum;
import it.pagopa.pn.downtime.model.converter.OffsetDateTimeConverter;
import it.pagopa.pn.downtime.model.converter.PnFunctionalityConverter;
import it.pagopa.pn.downtime.model.converter.PnFunctionalityStatusConverter;
import it.pagopa.pn.downtime.model.converter.PnSourceTypeConverter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Setter
@NoArgsConstructor
@DynamoDBTable(tableName = "Downtime-Event")
@ToString
public class Event implements Serializable {
	private static final long serialVersionUID = 1L;
	private String idEvent;
	private OffsetDateTime timestamp;
	private String yearMonth;
	private PnFunctionality functionality;
	private PnFunctionalityStatus status;
	private SourceTypeEnum sourceType;
	private String source;
	private String uuid;
	
	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getIdEvent() {
		return idEvent;
	}

	@DynamoDBAttribute
	@DynamoDBTypeConverted(converter = OffsetDateTimeConverter.Converter.class)
	public OffsetDateTime getTimestamp() {
		return timestamp;
	}

	@DynamoDBAttribute
	public String getYearMonth() {
		return yearMonth;
	}

	@DynamoDBAttribute
	@DynamoDBTypeConverted(converter = PnFunctionalityConverter.Converter.class)
	public PnFunctionality getFunctionality() {
		return functionality;
	}

	@DynamoDBAttribute
	@DynamoDBTypeConverted(converter = PnFunctionalityStatusConverter.Converter.class)
	public PnFunctionalityStatus getStatus() {
		return status;
	}

	@DynamoDBAttribute
	@DynamoDBTypeConverted(converter = PnSourceTypeConverter.Converter.class)
	public SourceTypeEnum getSourceType() {
		return sourceType;
	}

	@DynamoDBAttribute
	public String getSource() {
		return source;
	}
	
	@DynamoDBAttribute
	public String getUuid() {
		return uuid;
	}


}
