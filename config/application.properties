#cors
spring_cors_origin=${PN_DOWNTIMELOGS_CORS_ORIGIN_DOMAINS}
server.port=${PN_DOWNTIMELOGS_SERVER_PORT}

#jpa:
# spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.show-sql=false
# spring.jpa.open-in-view=false
spring.devtools.add-properties=true
spring.profiles.active=@spring.profiles.active@


amazon.safestore.baseurl=${PN_DOWNTIMELOGS_SAFESTORAGEBASEURL}
amazon.sqs.region.static=${AWS_REGIONCODE}


pagopa.header.enable-apikey=${PN_DOWNTIMELOGS_ENABLE_APIKEY}
pagopa.header.apikey = ${PN_DOWNTIMELOGS_APIKEY_HEADER}
pagopa.headervalue.apikey =  ${PN_DOWNTIMELOGS_APIKEY_VALUE}
pagopa.reservation.documenttype = ${PN_DOWNTIMELOGS_DOCUMENT_TYPE}

#parametri scheduler
scheduler.legalfactid.cron-expression = ${PN_DOWNTIMELOGS_SCHEDULER_LEGALFACTID_TIMER}
scheduler.legalfactid.active = ${PN_DOWNTIMELOGS_SCHEDULER_LEGALFACTID_ACTIVE}



amazon.dynamodb.endpoint=${PN_DOWNTIMELOGS_DYNAMODB_ENDPOINT}
amazon.dynamodb.accesskey=${PN_DOWNTIMELOGS_DYNAMODB_ACCESSKEY}
amazon.dynamodb.secretkey=${PN_DOWNTIMELOGS_DYNAMODB_SECRETKEY}



amazon.sqs.credentials.accessKey=${PN_DOWNTIMELOGS_SQS_ACCESSKEY}
amazon.sqs.credentials.secretKey=${PN_DOWNTIMELOGS_SQS_SECRETKEY}

amazon.sqs.end-point.acts-queue=${PN_DOWNTIMELOGS_SQS_ACTS_ENDPOINT}
amazon.sqs.end-point.cloudwatch=${PN_DOWNTIMELOGS_CLOUDWATCH_ENDPOINT}
amazon.sqs.end-point.legalfact-available=${PN_DOWNTIMELOGS_LEGALFACTAVAILABLE_ENDPOINT}

spring.main.allow-bean-definition-overriding=true




