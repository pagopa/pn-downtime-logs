#cors
spring_cors_origin=${CORS_ORIGIN_DOMAINS}
server.port=${SERVER_PORT}

#jpa:
# spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.show-sql=false
# spring.jpa.open-in-view=false
spring.devtools.add-properties=true
spring.profiles.active=@spring.profiles.active@


amazon.safestore.baseurl=${PN_DOWNTIMELOGS_SAFESTORAGEBASEURL}
amazon.sqs.region.static=${AWS_REGIONCODE}


pagopa.header.enable-apikey=$PN_DOWNTIMELOGS_ENABLE_APIKEY}
pagopa.header.apikey = ${PN_DOWNTIMELOGS_APIKEY_HEADER}
pagopa.headervalue.apikey =  ${PN_DOWNTIMELOGS_APIKEY_VALUE}
pagopa.reservation.documenttype =  ${PN_DOWNTIMELOGS_DOCUMENT_TYPE}

#parametri scheduler
scheduler.legalfactid.cron-expression = ${PN_DOWNTIMELOGS_SCHEDULER_LEGALFACTID_TIMER}
scheduler.legalfactid.active = ${PN_DOWNTIMELOGS_SCHEDULER_LEGALFACTID_ACTIVE}



amazon.dynamodb.endpoint=${DYNAMODB_ENDPOINT}
amazon.dynamodb.accesskey=${DYNAMODB_ACCESSKEY}
amazon.dynamodb.secretkey=${DYNAMODB_SECRETKEY}



amazon.sqs.credentials.accessKey=${SQS_ACCESSKEY}
amazon.sqs.credentials.secretKey=${SQS_SECRETKEY}

amazon.sqs.end-point.acts-queue=${SQS_ENDPOINT}
amazon.sqs.end-point.cloudwatch=${CLOUDWATCH_ENDPOINT}
amazon.sqs.end-point.legalfact-available=${LEGALFACTAVAILABLE_ENDPOINT}




