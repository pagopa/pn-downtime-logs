#jpa:
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

#print the statement parameters
#mettere un v1

server.port=9091
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.devtools.add-properties= true

spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

amazon.dynamodb.event.endpoint=http://localhost:8000/events
amazon.dynamodb.log.endpoint=http://localhost:8000/logs
amazon.dynamodb.accesskey=w4vuzp
amazon.dynamodb.secretkey=2q28v
amazon.safestore.baseurl=https://14ej9p2krd.execute-api.eu-south-1.amazonaws.com/dev
amazon.safestore.reservefile=/safe-storage/v1/files

amazon.sqs.region.static=us-east-1
amazon.sqs.credentials.accessKey=admin
amazon.sqs.credentials.secretKey=admin

#amazon.sqs.end-point.acts-queue=https://sqs.us-east-1.amazonaws.com/551158864219/acts-queue
#amazon.sqs.end-point.cloudwatch=https://sqs.us-east-1.amazonaws.com/551158864219/downtime-cloudwatch-allarms
#amazon.sqs.end-point.legalfact-available=https://sqs.us-east-1.amazonaws.com/551158864219/legalfact-available

amazon.sqs.end-point.acts-queue=http://localhost:9324/queue/acts-queue
amazon.sqs.end-point.cloudwatch=http://localhost:9324/queue/downtime-cloudwatch
amazon.sqs.end-point.legalfact-available=http://localhost:9324/queue/legalfact-available

pagopa.header.enable-apikey=false
pagopa.header.apikey = x-api-key
pagopa.headervalue.apikey = apiKey
pagopa.reservation.documenttype = PN_LEGAL_FACTS

#parametri scheduler
scheduler.legalfactid.cron-expression = 0 /1 * ? * *
scheduler.legalfactid.active = false

spring.main.allow-bean-definition-overriding=true

